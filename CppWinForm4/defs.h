#pragma once

/*
* Связь обеспечивается по протоколу UDP
* По принципу вопрос - ответ
*
* Синхронизационное сообщение:
*      sync_t
* Отправляется платой раз в такт всегда, используется для синхронизации
* ответом является полное содержание сообщения
* если ответ отсутствует, сообщение повторяется
* если данная ситуация повторяется на протяжении 5 тактов работы связь считается потерянной
*
* Сообщения:
*      dvs_stat_t
*      akb_stat_t
*      acs_stat_t
*      arms_stat_t
*      navi_stat_t
* Отправляются платой по требованию (при изменении содержания), максимально раз в такт работы устройства,
* ответом на сообщение является индекс сообщения + счетчик (2 байта)
* если ответ отсутствует, сообщение повторяется
* если данная ситуация повторяется на протяжении 5 тактов работы связь считается потерянной
*
* Сообщение dvs_com_t является командным сообщением (от планшета плате)
* и должно отправляться с планшета при дистанционном управлении
* Передается по требованию (при изменении содержания структуры),
* не чаще чем раз в такт работы устройства (предположительно 100 млс)
* ответом на сообщение является индекс сообщения + счетчик (2 байта)
* если ответ отсутствует, сообщение повторяется
* если данная ситуация повторяется на протяжении 500 млс связь считается потерянной
*
* Сообщение telemtr_t передается по запросу(запрос с планшета на плату)
* запросом является индекс и номер счетчика
*/

// синхронизационное сообщение 2 bytes
struct sync_t {
	char index;                     // индекс сообщения 'S'
	unsigned char seq;              // циклический счетчик
};

//структура состояния двигателей 50 bytes
struct dvs_stat_t {
	char index;                     // индекс сообщения 'D'
	unsigned char seq;              // циклический счетчик

	short rpm[4];                   // обороты двигателей
	short temp[4];                  // температуры двигателей
	unsigned char enable[4];        // исправность двигателей

	short contrl_temp[4];           // температура контроллеров двигателей
	unsigned short I[4];            // токи на контроллерах

	short angl[4];                  // углы поворота сервоприводов
	unsigned char enable_servo[4];  // исправность сервоприводов
};

// команда на двигатели 20 bytes
struct dvs_com_t {
	char index;             // индекс сообщения 'C'
	unsigned char seq;      // циклический счетчик

	unsigned short com[4];  // команда на двигатели
	unsigned char r;        // Режим работы двигателей

	short angl[4];          // команда на сервоприводы
};

// состояние АКБ 16 bytes
struct akb_stat_t {
	char index;             // индекс сообщения 'B'
	unsigned char seq;      // циклический счетчик

	unsigned char enable;   // исправность АКБ
	short temp;             // температура АКБ
	unsigned char charge_level;   // уровень заряда в процентах

	unsigned char volt;     // текущее напряжение АКБ
	unsigned int capasity;  // емкость АКБ
	unsigned char I;        // ток разряда
};
// состояние акселерометров 26 bytes
struct acs_stat_t {
	char index;             // индекс сообщения 'A'
	unsigned char seq;      // циклический счетчик

	short angl[3];          // углы наклона ровера
	short accel[3];         // ускорения про трем осям

	unsigned char enable[4];       // исправность
	short temp[4];          // температуры акселерометров
};
// состояние органов управления 8 bytes
struct arms_stat_t {
	char index;             // индекс сообщения 'H'
	unsigned char seq;      // циклический счетчик

	unsigned short sig[2];  // сигналы с ручек управления
	unsigned char enable[2];// состояние
};
// состояние навигации 88 bytes
struct navi_stat_t {
	char index;             // индекс сообщения 'N'
	unsigned char seq;      // циклический счетчик

	unsigned int distance; // пройденный путь
	unsigned int x[10];     // координата X
	unsigned int y[10];     // координата Y
};

// прочая телеметрия 122 bytes
struct telemtr_t {
	char index;             // индекс сообщения 'T'
	unsigned char seq;      // циклический счетчик

	unsigned short content[60]; // прочая телеметрия
};
